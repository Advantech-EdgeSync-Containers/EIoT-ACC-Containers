docker_image_name=eiot/eas-qc-qcs6490:le1.3-1.0.0

export XDG_RUNTIME_DIR=/dev/socket/weston && export WAYLAND_DISPLAY=wayland-1

docker_run_sh_name="run_yolov5n_video_gstd.sh"

appdir=/home/ai_docker_dir

camera_usb=/dev/

mount_dir_string=""
mount_cam_string=""

if [[ "$(ls /dev/video*)" = "/dev/video2" ]];then

docker_run_sh_name="run_yolov5n_cam_gstd.sh"
mount_cam_string="--device $camera_usb"

fi

docker pull $docker_image_name

container_id=$(docker run -it -d $mount_cam_string --device /dev/dri/card0 --device /dev/dri/renderD128 --device /dev/kgsl-3d0 --device /dev/video32 --device /dev/video33 --device /dev/dma_heap/system --device /dev/dma_heap/qcom,system --device /dev/fastrpc-cdsp -v /usr/lib/libatomic.so.1:/usr/lib/libatomic.so.1 -v /usr/lib/libatomic.so.1.2.0:/usr/lib/libatomic.so.1.2.0 -v /dev/socket/weston:/dev/socket/weston -v /opt/qti/development:/opt/qti/development -v /usr/lib/libgbm.so:/usr/lib/libgbm.so -v /usr/lib/libgsl.so:/usr/lib/libgsl.so -v /usr/lib/libgsl.so.1:/usr/lib/libgsl.so.1 -v /usr/lib/libdmabufheap.so.0:/usr/lib/libdmabufheap.so.0 -v /usr/lib/libhta_hexagon_runtime_snpe.so:/usr/lib/libhta_hexagon_runtime_snpe.so -v /usr/lib/libPlatformValidatorShared.so:/usr/lib/libPlatformValidatorShared.so -v /usr/lib/libSNPE.so:/usr/lib/libSNPE.so -v /usr/lib/libSnpeDspV66Stub.so:/usr/lib/libSnpeDspV66Stub.so -v /usr/lib/libSnpeHta.so:/usr/lib/libSnpeHta.so -v /usr/lib/libSnpeHtpPrepare.so:/usr/lib/libSnpeHtpPrepare.so -v /usr/lib/libSnpeHtpV68Stub.so:/usr/lib/libSnpeHtpV68Stub.so -v /usr/lib/libQnnChrometraceProfilingReader.so:/usr/lib/libQnnChrometraceProfilingReader.so -v /usr/lib/libQnnGpu.so:/usr/lib/libQnnGpu.so -v /usr/lib/libQnnHtpProfilingReader.so:/usr/lib/libQnnHtpProfilingReader.so -v /usr/lib/libQnnCpu.so:/usr/lib/libQnnCpu.so -v /usr/lib/libQnnDspV66Stub.so:/usr/lib/libQnnDspV66Stub.so -v /usr/lib/libQnnHtpNetRunExtensions.so:/usr/lib/libQnnHtpNetRunExtensions.so -v /usr/lib/libQnnHtp.so:/usr/lib/libQnnHtp.so -v /usr/lib/libQnnJsonProfilingReader.so:/usr/lib/libQnnJsonProfilingReader.so -v /usr/lib/libQnnDspNetRunExtensions.so:/usr/lib/libQnnDspNetRunExtensions.so -v /usr/lib/libQnnGpuNetRunExtensions.so:/usr/lib/libQnnGpuNetRunExtensions.so -v /usr/lib/libQnnHtpOptraceProfilingReader.so:/usr/lib/libQnnHtpOptraceProfilingReader.so -v /usr/lib/libQnnSaver.so:/usr/lib/libQnnSaver.so -v /usr/lib/libQnnDsp.so:/usr/lib/libQnnDsp.so -v /usr/lib/libQnnGpuProfilingReader.so:/usr/lib/libQnnGpuProfilingReader.so -v /usr/lib/libQnnHtpPrepare.so:/usr/lib/libQnnHtpPrepare.so -v /usr/lib/libQnnSystem.so:/usr/lib/libQnnSystem.so -v /usr/lib/libQnnHtpV68Stub.so:/usr/lib/libQnnHtpV68Stub.so -v /usr/lib/rfsa/adsp/libSnpeHtpV68Skel.so:/usr/lib/rfsa/adsp/libSnpeHtpV68Skel.so -v /usr/lib/rfsa/adsp/libQnnHtpV68Skel.so:/usr/lib/rfsa/adsp/libQnnHtpV68Skel.so -v /usr/lib/rfsa/adsp/libQnnHtpV68.so:/usr/lib/rfsa/adsp/libQnnHtpV68.so -v /usr/lib/rfsa/adsp/libQnnSaver.so:/usr/lib/rfsa/adsp/libQnnSaver.so -v /usr/lib/rfsa/adsp/libQnnSystem.so:/usr/lib/rfsa/adsp/libQnnSystem.so -v /usr/lib/libenv_time.so:/usr/lib/libenv_time.so -v /usr/lib/libevaluation_proto.so:/usr/lib/libevaluation_proto.so -v /usr/lib/libimage_metrics.so:/usr/lib/libimage_metrics.so -v /usr/lib/libjpeg_internal.so:/usr/lib/libjpeg_internal.so -v /usr/lib/libtensorflowlite_c.so:/usr/lib/libtensorflowlite_c.so -v /usr/lib/libtf_logging.so:/usr/lib/libtf_logging.so -v /usr/lib/libVideoCtrl.so:/usr/lib/libVideoCtrl.so -v /usr/lib/libIB2C.so:/usr/lib/libIB2C.so -v /usr/lib/libEGL_adreno.so:/usr/lib/libEGL_adreno.so -v /usr/lib/libEGL_adreno.so.1:/usr/lib/libEGL_adreno.so.1 -v /usr/lib/libGLESv2_adreno.so:/usr/lib/libGLESv2_adreno.so -v /usr/lib/libGLESv2_adreno.so.2:/usr/lib/libGLESv2_adreno.so.2 -v /usr/lib/libpropertyvault.so.0:/usr/lib/libpropertyvault.so.0 -v /usr/lib/libpropertyvault.so.0.0.0:/usr/lib/libpropertyvault.so.0.0.0 -v /usr/lib/libwayland-client.so.0:/usr/lib/libwayland-client.so.0 -v /usr/lib/libwayland-egl.so.1:/usr/lib/libwayland-egl.so.1 -v /usr/lib/libadreno_utils.so:/usr/lib/libadreno_utils.so -v /usr/lib/libadreno_utils.so.1:/usr/lib/libadreno_utils.so.1 -v /usr/lib/libCB.so:/usr/lib/libCB.so -v /usr/lib/libEGL.so:/usr/lib/libEGL.so -v /usr/lib/libEGL.so.1:/usr/lib/libEGL.so.1 -v /usr/lib/libEGL.so.1.0:/usr/lib/libEGL.so.1.0 -v /usr/lib/libEGL.so.1.0.0:/usr/lib/libEGL.so.1.0.0 -v /usr/lib/libeglSubDriverWayland.so:/usr/lib/libeglSubDriverWayland.so -v /usr/lib/libGLESv1_CM.so:/usr/lib/libGLESv1_CM.so -v /usr/lib/libGLESv1_CM.so.1:/usr/lib/libGLESv1_CM.so.1 -v /usr/lib/libGLESv1_CM.so.1.0:/usr/lib/libGLESv1_CM.so.1.0 -v /usr/lib/libGLESv1_CM.so.1.0.0:/usr/lib/libGLESv1_CM.so.1.0.0 -v /usr/lib/libGLESv1_CM_adreno.so:/usr/lib/libGLESv1_CM_adreno.so -v /usr/lib/libGLESv2.so:/usr/lib/libGLESv2.so -v /usr/lib/libGLESv2.so.2:/usr/lib/libGLESv2.so.2 -v /usr/lib/libGLESv2.so.2.0:/usr/lib/libGLESv2.so.2.0 -v /usr/lib/libGLESv2.so.2.0.0:/usr/lib/libGLESv2.so.2.0.0 -v /usr/lib/libllvm-glnext.so:/usr/lib/libllvm-glnext.so -v /usr/lib/libllvm-glnext.so.1:/usr/lib/libllvm-glnext.so.1 -v /usr/lib/libllvm-qcom.so:/usr/lib/libllvm-qcom.so -v /usr/lib/libllvm-qgl.so:/usr/lib/libllvm-qgl.so -v /usr/lib/libOpenCL.so:/usr/lib/libOpenCL.so -v /usr/lib/libOpenCL_adreno.so:/usr/lib/libOpenCL_adreno.so -v /usr/lib/libq3dtools_adreno.so:/usr/lib/libq3dtools_adreno.so -v /usr/lib/libq3dtools_esx.so:/usr/lib/libq3dtools_esx.so -v /usr/lib/libvulkan_adreno.so:/usr/lib/libvulkan_adreno.so -v /usr/lib/libQnnTFLiteDelegate.so:/usr/lib/libQnnTFLiteDelegate.so -v /usr/lib/libadsprpc.so:/usr/lib/libadsprpc.so -v /usr/lib/libcdsprpc.so:/usr/lib/libcdsprpc.so -v /usr/lib/libfastcvopt.so:/usr/lib/libfastcvopt.so -v /usr/lib/dsp/cdsp/cv/v68/KODIAK/libfastcvdsp_skel.so:/usr/lib/dsp/cdsp/cv/v68/KODIAK/libfastcvdsp_skel.so -v /usr/lib/dsp/cdsp/cv/v68/KODIAK/libfastcvadsp.so:/usr/lib/dsp/cdsp/cv/v68/KODIAK/libfastcvadsp.so -v /usr/lib/libfastcvdsp_stub.so:/usr/lib/libfastcvdsp_stub.so -v /usr/lib/libdmabufheap.so.0.0.0:/usr/lib/libdmabufheap.so.0.0.0 -v /usr/lib/dsp/cdsp/libc++.so.1:/usr/lib/dsp/cdsp/libc++.so.1 -v /usr/lib/dsp/cdsp/libc++abi.so.1:/usr/lib/dsp/cdsp/libc++abi.so.1 -v /var/run/pulse/native:/var/run/pulse/native -v /usr/lib/libcamera_metadata.so:/usr/lib/libcamera_metadata.so -v /tmp/socket/cam_server/:/tmp/socket/cam_server/ -v /opt/data:/opt/data $mount_dir_string -e XDG_RUNTIME_DIR=/dev/socket/weston -e WAYLAND_DISPLAY=wayland-1 -e GST_DEBUG_NO_COLOR=1 -h qimsdk-QIMSDK-LE --user root --name qimsdk-QIMSDK-LE $docker_image_name)

if [ ! -z ${container_id} ];then

echo "${container_id}" > container_id.txt

fi

docker exec -it {container_id} bash -c "cd /EdgeAI && ./docker_run_sh_name"
